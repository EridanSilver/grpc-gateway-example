// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/user_data/UserService.proto

package user

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type GetByIdRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByIdRequest) Reset()         { *m = GetByIdRequest{} }
func (m *GetByIdRequest) String() string { return proto.CompactTextString(m) }
func (*GetByIdRequest) ProtoMessage()    {}
func (*GetByIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ee30a70ee5a0c, []int{0}
}
func (m *GetByIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByIdRequest.Unmarshal(m, b)
}
func (m *GetByIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByIdRequest.Marshal(b, m, deterministic)
}
func (m *GetByIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByIdRequest.Merge(m, src)
}
func (m *GetByIdRequest) XXX_Size() int {
	return xxx_messageInfo_GetByIdRequest.Size(m)
}
func (m *GetByIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByIdRequest proto.InternalMessageInfo

func (m *GetByIdRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetByIdResponse struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByIdResponse) Reset()         { *m = GetByIdResponse{} }
func (m *GetByIdResponse) String() string { return proto.CompactTextString(m) }
func (*GetByIdResponse) ProtoMessage()    {}
func (*GetByIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ee30a70ee5a0c, []int{1}
}
func (m *GetByIdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByIdResponse.Unmarshal(m, b)
}
func (m *GetByIdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByIdResponse.Marshal(b, m, deterministic)
}
func (m *GetByIdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByIdResponse.Merge(m, src)
}
func (m *GetByIdResponse) XXX_Size() int {
	return xxx_messageInfo_GetByIdResponse.Size(m)
}
func (m *GetByIdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByIdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetByIdResponse proto.InternalMessageInfo

func (m *GetByIdResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*GetByIdRequest)(nil), "userdata.GetByIdRequest")
	proto.RegisterType((*GetByIdResponse)(nil), "userdata.GetByIdResponse")
}

func init() { proto.RegisterFile("api/user_data/UserService.proto", fileDescriptor_aa7ee30a70ee5a0c) }

var fileDescriptor_aa7ee30a70ee5a0c = []byte{
	// 210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4f, 0x2c, 0xc8, 0xd4,
	0x2f, 0x2d, 0x4e, 0x2d, 0x8a, 0x4f, 0x49, 0x2c, 0x49, 0xd4, 0x0f, 0x2d, 0x4e, 0x2d, 0x0a, 0x4e,
	0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x49, 0x82,
	0xe4, 0xa4, 0x64, 0xd2, 0xf3, 0xf3, 0xd3, 0x73, 0x52, 0xf5, 0x41, 0x3a, 0x12, 0xf3, 0xf2, 0xf2,
	0x4b, 0x12, 0x4b, 0x32, 0xf3, 0xf3, 0x8a, 0x21, 0xea, 0x94, 0x14, 0xb8, 0xf8, 0xdc, 0x53, 0x4b,
	0x9c, 0x2a, 0x3d, 0x53, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0xf8, 0xb8, 0x98, 0x32,
	0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x98, 0x83, 0x98, 0x32, 0x53, 0x94, 0x54, 0xb9, 0xf8, 0xe1,
	0x2a, 0x8a, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x84, 0xb8, 0x58, 0x40, 0x46, 0x83, 0x15, 0x71,
	0x06, 0x81, 0xd9, 0x46, 0xe9, 0x5c, 0xdc, 0x48, 0xae, 0x10, 0x8a, 0xe0, 0x62, 0x87, 0xea, 0x12,
	0x92, 0xd0, 0x83, 0xb9, 0x45, 0x0f, 0xd5, 0x2a, 0x29, 0x49, 0x2c, 0x32, 0x10, 0x2b, 0x94, 0x24,
	0x9a, 0x2e, 0x3f, 0x99, 0xcc, 0x24, 0x24, 0x24, 0xa0, 0x5f, 0x66, 0x08, 0xf6, 0xa8, 0x7e, 0x7a,
	0x6a, 0x49, 0x52, 0x65, 0x66, 0x8a, 0x13, 0x57, 0x14, 0x87, 0x7e, 0x41, 0x12, 0x58, 0x2c, 0x89,
	0x0d, 0xec, 0x09, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2e, 0xf3, 0x1d, 0xec, 0x0f, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	GetById(ctx context.Context, in *GetByIdRequest, opts ...grpc.CallOption) (*GetByIdResponse, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) GetById(ctx context.Context, in *GetByIdRequest, opts ...grpc.CallOption) (*GetByIdResponse, error) {
	out := new(GetByIdResponse)
	err := c.cc.Invoke(ctx, "/userdata.UserService/GetById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	GetById(context.Context, *GetByIdRequest) (*GetByIdResponse, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) GetById(ctx context.Context, req *GetByIdRequest) (*GetByIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetById not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_GetById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userdata.UserService/GetById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetById(ctx, req.(*GetByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "userdata.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetById",
			Handler:    _UserService_GetById_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/user_data/UserService.proto",
}
